// Code generated by errsgen; DO NOT EDIT.
package errors

import (
	"errors"
	"github.com/miekg/dns"
)

var (
	ErrFormat         = &DNSError{RCode: dns.RcodeFormatError, Nested: errors.New(dns.RcodeToString[dns.RcodeFormatError])}
	ErrServerFailure  = &DNSError{RCode: dns.RcodeServerFailure, Nested: errors.New(dns.RcodeToString[dns.RcodeServerFailure])}
	ErrName           = &DNSError{RCode: dns.RcodeNameError, Nested: errors.New(dns.RcodeToString[dns.RcodeNameError])}
	ErrNotImplemented = &DNSError{RCode: dns.RcodeNotImplemented, Nested: errors.New(dns.RcodeToString[dns.RcodeNotImplemented])}
	ErrRefused        = &DNSError{RCode: dns.RcodeRefused, Nested: errors.New(dns.RcodeToString[dns.RcodeRefused])}
	ErrYXDomain       = &DNSError{RCode: dns.RcodeYXDomain, Nested: errors.New(dns.RcodeToString[dns.RcodeYXDomain])}
	ErrYXRrset        = &DNSError{RCode: dns.RcodeYXRrset, Nested: errors.New(dns.RcodeToString[dns.RcodeYXRrset])}
	ErrNXRrset        = &DNSError{RCode: dns.RcodeNXRrset, Nested: errors.New(dns.RcodeToString[dns.RcodeNXRrset])}
	ErrNotAuth        = &DNSError{RCode: dns.RcodeNotAuth, Nested: errors.New(dns.RcodeToString[dns.RcodeNotAuth])}
	ErrNotZone        = &DNSError{RCode: dns.RcodeNotZone, Nested: errors.New(dns.RcodeToString[dns.RcodeNotZone])}
	ErrBadSig         = &DNSError{RCode: dns.RcodeBadSig, Nested: errors.New(dns.RcodeToString[dns.RcodeBadSig])}
	ErrBadKey         = &DNSError{RCode: dns.RcodeBadKey, Nested: errors.New(dns.RcodeToString[dns.RcodeBadKey])}
	ErrBadTime        = &DNSError{RCode: dns.RcodeBadTime, Nested: errors.New(dns.RcodeToString[dns.RcodeBadTime])}
	ErrBadMode        = &DNSError{RCode: dns.RcodeBadMode, Nested: errors.New(dns.RcodeToString[dns.RcodeBadMode])}
	ErrBadName        = &DNSError{RCode: dns.RcodeBadName, Nested: errors.New(dns.RcodeToString[dns.RcodeBadName])}
	ErrBadAlg         = &DNSError{RCode: dns.RcodeBadAlg, Nested: errors.New(dns.RcodeToString[dns.RcodeBadAlg])}
	ErrBadTrunc       = &DNSError{RCode: dns.RcodeBadTrunc, Nested: errors.New(dns.RcodeToString[dns.RcodeBadTrunc])}
	ErrBadCookie      = &DNSError{RCode: dns.RcodeBadCookie, Nested: errors.New(dns.RcodeToString[dns.RcodeBadCookie])}
)
